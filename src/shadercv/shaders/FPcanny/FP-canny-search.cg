/**
 * This file is part of the OpenVIDIA project at http://openvidia.sf.net
 * Copyright (C) 2004, James Fung
 *
 * OpenVIDIA is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * OpenVIDIA is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with OpenVIDIA; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 **/

void FragmentProgram(
    const uniform  float4 thresh = float4( 7.0, 4.0, 4.0, 4.0),
    in float2 fptexCoord : TEXCOORD0,
    out float4 colorO       : COLOR0,
    in float4 wpos : WPOS,
    const uniform samplerRECT FPE1: TEXUNIT0 )
{
    //magdir holds { dx, dy, mag, direct}
    float4 magdir = texRECT(FPE1, fptexCoord);
    float dx = magdir.x;
    float dy = magdir.y;
    float mag = magdir.z;
    float dir = magdir.w;
    float alpha = 0.5/sin(3.14159/8);  //eight directions on grid
   
    float2 offset = round( alpha.xx*magdir.xy/magdir.zz );

    float4 fwdneighbour, backneighbour;
    fwdneighbour = texRECT(FPE1, fptexCoord + offset ); 
    backneighbour = texRECT(FPE1, fptexCoord - offset ); 


    if( fwdneighbour.z > magdir.z || backneighbour.z > magdir.z ) {  
      colorO = float4(0.0, 0.0, 0.0, 0.0); 
    }
    else {
      colorO = float4(1.0, 1.0, 1.0, 1.0); //white for ez viewing
//      colorO = float4(dx, dy, dir, mag); //real output 
    }

    //float mythresh= 10.0;
    if( magdir.z < thresh.x )  {
      colorO = float4(0.0, 0.0, 0.0, 0.0); 
    }

}
