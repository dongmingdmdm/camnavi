/**
 * This file is part of the OpenVIDIA project at http://openvidia.sf.net
 * Copyright (C) 2004, James Fung
 *
 * OpenVIDIA is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * OpenVIDIA is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with OpenVIDIA; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 **/

float2 lookup( inout float2 coord,
                 in float ox, 
                 in float oy,
                 in float f1,
                 in float f2,
                 in float k1, 
                 in float k2,
                 in float k3,
                 in float k4   ) 
{
   float2 ff = {f1,f2}; 
   coord = (coord.xy-float2(ox,oy))/ff;
   float x1 = coord.x;
   float y1 = coord.y;
   
   float r = sqrt(  ((x1))*((x1))+((y1))*((y1)) );
   float r2 = r*r;
   float r4 = r2*r2;
   float coeff = (k1*r2+k2*r4);

   float dx = k3*2.0*x1*y1 + k4*(r2+2.0*x1*x1);
   float dy = k3*(r2+2.0*y1*y1) + k4*2.0*x1*y1;

   coord = ((coord + coord*coeff.xx + float2(dx,dy)  )*ff)+float2(ox,oy);
   return coord;
}

void FragmentProgram(
    in float2 fptexCoord : TEXCOORD0,
    out float4 colorO       : COLOR0,
    in float4 wpos : WPOS,
    const uniform float f1 = 723.99739 /2.0,
    const uniform float f2 = 722.97928 /2.0,
    const uniform float ox = 326.06551 /2.0,
    const uniform float oy = 255.89249 /2.0,
    const uniform float k1 =  -0.33246 ,
    const uniform float k2 = 0.01839   ,
    const uniform float k3 = -0.00020  ,
    const uniform float k4 = 0.00022   ,
    const uniform float3x3 Rect, 
    const uniform samplerRECT FPE1 )
{
 
   colorO = texRECT(FPE1, lookup( fptexCoord, ox, oy,f1,f2,k1,k2,k3,k4) );

}
